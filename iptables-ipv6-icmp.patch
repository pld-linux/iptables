diff -ur iptables-1.2/extensions/libip6t_icmp.c iptables-1.2.icmp6/extensions/libip6t_icmp.c
--- iptables-1.2/extensions/libip6t_icmp.c	Sat Jul  1 10:19:16 2000
+++ iptables-1.2.icmp6/extensions/libip6t_icmp.c	Sun Feb 18 14:55:37 2001
@@ -231,7 +231,7 @@
 {
 	const struct ip6t_icmp *icmp = (struct ip6t_icmp *)match->data;
 
-	printf("icmp ");
+	printf("ipv6-icmp ");
 	print_icmptype(icmp->type, icmp->code[0], icmp->code[1],
 		       icmp->invflags & IP6T_ICMP_INV,
 		       numeric);
@@ -262,7 +262,7 @@
 
 struct ip6tables_match icmp
 = { NULL,
-    "icmp",
+    "icmp6",
     NETFILTER_VERSION,
     IP6T_ALIGN(sizeof(struct ip6t_icmp)),
     IP6T_ALIGN(sizeof(struct ip6t_icmp)),
diff -ur iptables-1.2.2/ip6tables.c iptables-1.2.2.icmp6/ip6tables.c
--- iptables-1.2.2/ip6tables.c	Mon May 21 03:17:20 2001
+++ iptables-1.2.2.icmp6/ip6tables.c	Mon May 21 03:15:14 2001
@@ -643,16 +643,24 @@
 find_match(const char *name, enum ip6t_tryload tryload)
 {
 	struct ip6tables_match *ptr;
+	char *mname;
 
+	if (strstr(name, "icmp"))
+		mname = "icmp6";
+	else
+		mname = name;
 	for (ptr = ip6tables_matches; ptr; ptr = ptr->next) {
-		if (strcmp(name, ptr->name) == 0)
+		if (strcmp(mname, ptr->name) == 0)
 			break;
 	}
 
 	if (!ptr && tryload != DONT_LOAD) {
 		char path[sizeof(IPT_LIB_DIR) + sizeof("/libip6t_.so")
 			 + strlen(name)];
-		sprintf(path, IPT_LIB_DIR "/libip6t_%s.so", name);
+		if (strstr(name, "icmp"))
+			sprintf(path, IPT_LIB_DIR "/libip6t_icmp.so");
+		else
+			sprintf(path, IPT_LIB_DIR "/libip6t_%s.so", name);
 		if (dlopen(path, RTLD_NOW)) {
 			/* Found library.  If it didn't register itself,
 			   maybe they specified target as match. */
