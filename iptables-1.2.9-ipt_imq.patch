diff -uNr iptables-1.2.9_20040308.orig/extensions/.IMQ-test iptables-1.2.9_20040308/extensions/.IMQ-test
--- iptables-1.2.9_20040308.orig/extensions/.IMQ-test	1970-01-01 01:00:00.000000000 +0100
+++ iptables-1.2.9_20040308/extensions/.IMQ-test	2004-03-14 14:55:14.623395152 +0100
@@ -0,0 +1,3 @@
+#!/bin/sh
+# True if IMQ target patch is applied.
+[ -f $KERNEL_DIR/net/ipv4/netfilter/ipt_IMQ.c ] && echo IMQ
--- iptables-1.2.10_20040429/extensions/Makefile.orig	2004-04-07 15:00:43.000000000 +0200
+++ iptables-1.2.10_20040429/extensions/Makefile	2004-04-30 12:44:23.894461072 +0200
@@ -5,7 +5,7 @@
 # header files are present in the include/linux directory of this iptables
 # package (HW)
 #
-PF_EXT_SLIB:=ah connlimit connmark conntrack dscp ecn esp helper icmp iprange length limit mac mark multiport owner physdev pkttype realm rpc sctp standard state tcp tcpmss tos ttl udp unclean CLASSIFY CONNMARK DNAT DSCP ECN LOG MARK MASQUERADE MIRROR NETMAP NOTRACK REDIRECT REJECT SAME SNAT TARPIT TCPMSS TOS TRACE TTL ULOG
+PF_EXT_SLIB:=ah connlimit connmark conntrack dscp ecn esp helper icmp iprange length limit mac mark multiport owner physdev pkttype realm rpc sctp standard state tcp tcpmss tos ttl udp unclean CLASSIFY CONNMARK DNAT DSCP ECN LOG MARK MASQUERADE MIRROR NETMAP NOTRACK REDIRECT REJECT SAME SNAT TARPIT TCPMSS TOS TRACE TTL ULOG IMQ
 PF6_EXT_SLIB:=eui64 hl icmpv6 length limit mac mark multiport owner standard tcp udp HL LOG MARK TRACE
 
 # Optionals
diff -uNr iptables-1.2.9_20040308.orig/extensions/libipt_IMQ.c iptables-1.2.9_20040308/extensions/libipt_IMQ.c
--- iptables-1.2.9_20040308.orig/extensions/libipt_IMQ.c	1970-01-01 01:00:00.000000000 +0100
+++ iptables-1.2.9_20040308/extensions/libipt_IMQ.c	2004-03-14 14:56:05.363681456 +0100
@@ -0,0 +1,102 @@
+/* Shared library add-on to iptables to add IMQ target support. */
+#include <stdio.h>
+#include <string.h>
+#include <stdlib.h>
+#include <getopt.h>
+
+#include <iptables.h>
+#include <linux/netfilter_ipv4/ip_tables.h>
+#include <linux/netfilter_ipv4/ipt_IMQ.h>
+
+/* Function which prints out usage message. */
+static void
+help(void)
+{
+	printf(
+"IMQ target v%s options:\n"
+"  --todev <N>		enqueue to imq<N>, defaults to 0\n", 
+IPTABLES_VERSION);
+}
+
+static struct option opts[] = {
+	{ "todev", 1, 0, '1' },
+	{ 0 }
+};
+
+/* Initialize the target. */
+static void
+init(struct ipt_entry_target *t, unsigned int *nfcache)
+{
+	struct ipt_imq_info *mr = (struct ipt_imq_info*)t->data;
+
+	mr->todev = 0;
+	*nfcache |= NFC_UNKNOWN;
+}
+
+/* Function which parses command options; returns true if it
+   ate an option */
+static int
+parse(int c, char **argv, int invert, unsigned int *flags,
+      const struct ipt_entry *entry,
+      struct ipt_entry_target **target)
+{
+	struct ipt_imq_info *mr = (struct ipt_imq_info*)(*target)->data;
+	
+	switch(c) {
+	case '1':
+		if (check_inverse(optarg, &invert, NULL, 0))
+			exit_error(PARAMETER_PROBLEM,
+				   "Unexpected `!' after --todev");
+		mr->todev=atoi(optarg);
+		break;
+	default:
+		return 0;
+	}
+	return 1;
+}
+
+static void
+final_check(unsigned int flags)
+{
+}
+
+/* Prints out the targinfo. */
+static void
+print(const struct ipt_ip *ip,
+      const struct ipt_entry_target *target,
+      int numeric)
+{
+	struct ipt_imq_info *mr = (struct ipt_imq_info*)target->data;
+
+	printf("IMQ: todev %u ", mr->todev);
+}
+
+/* Saves the union ipt_targinfo in parsable form to stdout. */
+static void
+save(const struct ipt_ip *ip, const struct ipt_entry_target *target)
+{
+	struct ipt_imq_info *mr = (struct ipt_imq_info*)target->data;
+
+	printf("--todev %u", mr->todev);
+}
+
+static
+struct iptables_target imq
+= { NULL,
+    "IMQ",
+    IPTABLES_VERSION,
+    IPT_ALIGN(sizeof(struct ipt_imq_info)),
+    IPT_ALIGN(sizeof(struct ipt_imq_info)),
+    &help,
+    &init,
+    &parse,
+    &final_check,
+    &print,
+    &save,
+    opts
+};
+
+void _init(void)
+{
+	register_target(&imq);
+}
