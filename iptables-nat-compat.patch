diff -uNr iptables-1.3.1.orig/extensions/libipt_BALANCE.c iptables-1.3.1/extensions/libipt_BALANCE.c
--- iptables-1.3.1.orig/extensions/libipt_BALANCE.c	2005-02-19 20:19:17.000000000 +0100
+++ iptables-1.3.1/extensions/libipt_BALANCE.c	2005-03-16 17:40:05.000000000 +0100
@@ -30,7 +30,7 @@
 static void
 init(struct ipt_entry_target *t, unsigned int *nfcache)
 {
-	struct ip_nat_multi_range *mr = (struct ip_nat_multi_range *)t->data;
+	struct ip_nat_multi_range *mr = (struct ip_nat_multi_range_compat *)t->data;
 
 	/* Actually, it's 0, but it's ignored at the moment. */
 	mr->rangesize = 1;
@@ -70,8 +70,8 @@
       const struct ipt_entry *entry,
       struct ipt_entry_target **target)
 {
-	struct ip_nat_multi_range *mr
-		= (struct ip_nat_multi_range *)(*target)->data;
+	struct ip_nat_multi_range_compat *mr
+		= (struct ip_nat_multi_range_compat *)(*target)->data;
 
 	switch (c) {
 	case '1':
@@ -102,8 +102,8 @@
       const struct ipt_entry_target *target,
       int numeric)
 {
-	struct ip_nat_multi_range *mr
-		= (struct ip_nat_multi_range *)target->data;
+	struct ip_nat_multi_range_compat *mr
+		= (struct ip_nat_multi_range_compat *)target->data;
 	struct ip_nat_range *r = &mr->range[0];
 	struct in_addr a;
 
@@ -118,8 +118,8 @@
 static void
 save(const struct ipt_ip *ip, const struct ipt_entry_target *target)
 {
-	struct ip_nat_multi_range *mr
-		= (struct ip_nat_multi_range *)target->data;
+	struct ip_nat_multi_range_compat *mr
+		= (struct ip_nat_multi_range_compat *)target->data;
 	struct ip_nat_range *r = &mr->range[0];
 	struct in_addr a;
 
@@ -133,8 +133,8 @@
 	.next		= NULL,
 	.name		= "BALANCE",
 	.version	= IPTABLES_VERSION,
-	.size		= IPT_ALIGN(sizeof(struct ip_nat_multi_range)),
-	.userspacesize	= IPT_ALIGN(sizeof(struct ip_nat_multi_range)),
+	.size		= IPT_ALIGN(sizeof(struct ip_nat_multi_range_compat)),
+	.userspacesize	= IPT_ALIGN(sizeof(struct ip_nat_multi_range_compat)),
 	.help		= &help,
 	.init		= &init,
 	.parse		= &parse,
diff -uNr iptables-1.3.1.orig/extensions/libipt_DNAT.c iptables-1.3.1/extensions/libipt_DNAT.c
--- iptables-1.3.1.orig/extensions/libipt_DNAT.c	2005-02-19 20:19:17.000000000 +0100
+++ iptables-1.3.1/extensions/libipt_DNAT.c	2005-03-16 17:40:17.000000000 +0100
@@ -13,7 +13,7 @@
 struct ipt_natinfo
 {
 	struct ipt_entry_target t;
-	struct ip_nat_multi_range mr;
+	struct ip_nat_multi_range_compat mr;
 };
 
 /* Function which prints out usage message. */
@@ -225,8 +225,8 @@
 	.next		= NULL,
 	.name		= "DNAT",
 	.version	= IPTABLES_VERSION,
-	.size		= IPT_ALIGN(sizeof(struct ip_nat_multi_range)),
-	.userspacesize	= IPT_ALIGN(sizeof(struct ip_nat_multi_range)),
+	.size		= IPT_ALIGN(sizeof(struct ip_nat_multi_range_compat)),
+	.userspacesize	= IPT_ALIGN(sizeof(struct ip_nat_multi_range_compat)),
 	.help		= &help,
 	.parse		= &parse,
 	.final_check	= &final_check,
diff -uNr iptables-1.3.1.orig/extensions/libipt_MASQUERADE.c iptables-1.3.1/extensions/libipt_MASQUERADE.c
--- iptables-1.3.1.orig/extensions/libipt_MASQUERADE.c	2005-02-19 20:19:17.000000000 +0100
+++ iptables-1.3.1/extensions/libipt_MASQUERADE.c	2005-03-16 17:40:31.000000000 +0100
@@ -28,7 +28,7 @@
 static void
 init(struct ipt_entry_target *t, unsigned int *nfcache)
 {
-	struct ip_nat_multi_range *mr = (struct ip_nat_multi_range *)t->data;
+	struct ip_nat_multi_range_compat *mr = (struct ip_nat_multi_range_compat *)t->data;
 
 	/* Actually, it's 0, but it's ignored at the moment. */
 	mr->rangesize = 1;
@@ -37,7 +37,7 @@
 
 /* Parses ports */
 static void
-parse_ports(const char *arg, struct ip_nat_multi_range *mr)
+parse_ports(const char *arg, struct ip_nat_multi_range_compat *mr)
 {
 	const char *dash;
 	int port;
@@ -77,8 +77,8 @@
       struct ipt_entry_target **target)
 {
 	int portok;
-	struct ip_nat_multi_range *mr
-		= (struct ip_nat_multi_range *)(*target)->data;
+	struct ip_nat_multi_range_compat *mr
+		= (struct ip_nat_multi_range_compat *)(*target)->data;
 
 	if (entry->ip.proto == IPPROTO_TCP
 	    || entry->ip.proto == IPPROTO_UDP)
@@ -115,8 +115,8 @@
       const struct ipt_entry_target *target,
       int numeric)
 {
-	struct ip_nat_multi_range *mr
-		= (struct ip_nat_multi_range *)target->data;
+	struct ip_nat_multi_range_compat *mr
+		= (struct ip_nat_multi_range_compat *)target->data;
 	struct ip_nat_range *r = &mr->range[0];
 
 	if (r->flags & IP_NAT_RANGE_PROTO_SPECIFIED) {
@@ -132,8 +132,8 @@
 static void
 save(const struct ipt_ip *ip, const struct ipt_entry_target *target)
 {
-	struct ip_nat_multi_range *mr
-		= (struct ip_nat_multi_range *)target->data;
+	struct ip_nat_multi_range_compat *mr
+		= (struct ip_nat_multi_range_compat *)target->data;
 	struct ip_nat_range *r = &mr->range[0];
 
 	if (r->flags & IP_NAT_RANGE_PROTO_SPECIFIED) {
@@ -147,8 +147,8 @@
 static struct iptables_target masq = { NULL,
 	.name		= "MASQUERADE",
 	.version	= IPTABLES_VERSION,
-	.size		= IPT_ALIGN(sizeof(struct ip_nat_multi_range)),
-	.userspacesize	= IPT_ALIGN(sizeof(struct ip_nat_multi_range)),
+	.size		= IPT_ALIGN(sizeof(struct ip_nat_multi_range_compat)),
+	.userspacesize	= IPT_ALIGN(sizeof(struct ip_nat_multi_range_compat)),
 	.help		= &help,
 	.init		= &init,
 	.parse		= &parse,
diff -uNr iptables-1.3.1.orig/extensions/libipt_NETMAP.c iptables-1.3.1/extensions/libipt_NETMAP.c
--- iptables-1.3.1.orig/extensions/libipt_NETMAP.c	2005-02-19 20:19:17.000000000 +0100
+++ iptables-1.3.1/extensions/libipt_NETMAP.c	2005-03-16 17:40:42.000000000 +0100
@@ -58,7 +58,7 @@
 static void
 init(struct ipt_entry_target *t, unsigned int *nfcache)
 {
-	struct ip_nat_multi_range *mr = (struct ip_nat_multi_range *)t->data;
+	struct ip_nat_multi_range_compat *mr = (struct ip_nat_multi_range_compat *)t->data;
 
 	/* Actually, it's 0, but it's ignored at the moment. */
 	mr->rangesize = 1;
@@ -121,8 +121,8 @@
       const struct ipt_entry *entry,
       struct ipt_entry_target **target)
 {
-	struct ip_nat_multi_range *mr
-		= (struct ip_nat_multi_range *)(*target)->data;
+	struct ip_nat_multi_range_compat *mr
+		= (struct ip_nat_multi_range_compat *)(*target)->data;
 
 	switch (c) {
 	case '1':
@@ -153,8 +153,8 @@
       const struct ipt_entry_target *target,
       int numeric)
 {
-	struct ip_nat_multi_range *mr
-		= (struct ip_nat_multi_range *)target->data;
+	struct ip_nat_multi_range_compat *mr
+		= (struct ip_nat_multi_range_compat *)target->data;
 	struct ip_nat_range *r = &mr->range[0];
 	struct in_addr a;
 	int bits;
@@ -181,8 +181,8 @@
 	.next		= NULL,
 	.name		= MODULENAME,
 	.version	= IPTABLES_VERSION,
-	.size		= IPT_ALIGN(sizeof(struct ip_nat_multi_range)),
-	.userspacesize	= IPT_ALIGN(sizeof(struct ip_nat_multi_range)),
+	.size		= IPT_ALIGN(sizeof(struct ip_nat_multi_range_compat)),
+	.userspacesize	= IPT_ALIGN(sizeof(struct ip_nat_multi_range_compat)),
 	.help		= &help,
 	.init		= &init,
 	.parse		= &parse,
diff -uNr iptables-1.3.1.orig/extensions/libipt_REDIRECT.c iptables-1.3.1/extensions/libipt_REDIRECT.c
--- iptables-1.3.1.orig/extensions/libipt_REDIRECT.c	2005-02-19 20:19:17.000000000 +0100
+++ iptables-1.3.1/extensions/libipt_REDIRECT.c	2005-03-16 17:40:52.000000000 +0100
@@ -28,7 +28,7 @@
 static void
 init(struct ipt_entry_target *t, unsigned int *nfcache)
 {
-	struct ip_nat_multi_range *mr = (struct ip_nat_multi_range *)t->data;
+	struct ip_nat_multi_range_compat *mr = (struct ip_nat_multi_range_compat *)t->data;
 
 	/* Actually, it's 0, but it's ignored at the moment. */
 	mr->rangesize = 1;
@@ -37,7 +37,7 @@
 
 /* Parses ports */
 static void
-parse_ports(const char *arg, struct ip_nat_multi_range *mr)
+parse_ports(const char *arg, struct ip_nat_multi_range_compat *mr)
 {
 	const char *dash;
 	int port;
@@ -76,8 +76,8 @@
       const struct ipt_entry *entry,
       struct ipt_entry_target **target)
 {
-	struct ip_nat_multi_range *mr
-		= (struct ip_nat_multi_range *)(*target)->data;
+	struct ip_nat_multi_range_compat *mr
+		= (struct ip_nat_multi_range_compat *)(*target)->data;
 	int portok;
 
 	if (entry->ip.proto == IPPROTO_TCP
@@ -115,8 +115,8 @@
       const struct ipt_entry_target *target,
       int numeric)
 {
-	struct ip_nat_multi_range *mr
-		= (struct ip_nat_multi_range *)target->data;
+	struct ip_nat_multi_range_compat *mr
+		= (struct ip_nat_multi_range_compat *)target->data;
 	struct ip_nat_range *r = &mr->range[0];
 
 	if (r->flags & IP_NAT_RANGE_PROTO_SPECIFIED) {
@@ -132,8 +132,8 @@
 static void
 save(const struct ipt_ip *ip, const struct ipt_entry_target *target)
 {
-	struct ip_nat_multi_range *mr
-		= (struct ip_nat_multi_range *)target->data;
+	struct ip_nat_multi_range_compat *mr
+		= (struct ip_nat_multi_range_compat *)target->data;
 	struct ip_nat_range *r = &mr->range[0];
 
 	if (r->flags & IP_NAT_RANGE_PROTO_SPECIFIED) {
@@ -149,8 +149,8 @@
 	.next		= NULL,
 	.name		= "REDIRECT",
 	.version	= IPTABLES_VERSION,
-	.size		= IPT_ALIGN(sizeof(struct ip_nat_multi_range)),
-	.userspacesize	= IPT_ALIGN(sizeof(struct ip_nat_multi_range)),
+	.size		= IPT_ALIGN(sizeof(struct ip_nat_multi_range_compat)),
+	.userspacesize	= IPT_ALIGN(sizeof(struct ip_nat_multi_range_compat)),
 	.help		= &help,
 	.init		= &init,
  	.parse		= &parse,
diff -uNr iptables-1.3.1.orig/extensions/libipt_SNAT.c iptables-1.3.1/extensions/libipt_SNAT.c
--- iptables-1.3.1.orig/extensions/libipt_SNAT.c	2005-02-19 20:19:17.000000000 +0100
+++ iptables-1.3.1/extensions/libipt_SNAT.c	2005-03-16 17:41:00.000000000 +0100
@@ -13,7 +13,7 @@
 struct ipt_natinfo
 {
 	struct ipt_entry_target t;
-	struct ip_nat_multi_range mr;
+	struct ip_nat_multi_range_compat mr;
 };
 
 /* Function which prints out usage message. */
@@ -225,8 +225,8 @@
 	.next		= NULL,
 	.name		= "SNAT",
 	.version	= IPTABLES_VERSION,
-	.size		= IPT_ALIGN(sizeof(struct ip_nat_multi_range)),
-	.userspacesize	= IPT_ALIGN(sizeof(struct ip_nat_multi_range)),
+	.size		= IPT_ALIGN(sizeof(struct ip_nat_multi_range_compat)),
+	.userspacesize	= IPT_ALIGN(sizeof(struct ip_nat_multi_range_compat)),
 	.help		= &help,
 	.parse		= &parse,
 	.final_check	= &final_check,
diff -uNr iptables-1.3.1.orig/iptables-howtos/netfilter-hacking-HOWTO.sgml iptables-1.3.1/iptables-howtos/netfilter-hacking-HOWTO.sgml
--- iptables-1.3.1.orig/iptables-howtos/netfilter-hacking-HOWTO.sgml	2000-12-12 10:03:04.000000000 +0100
+++ iptables-1.3.1/iptables-howtos/netfilter-hacking-HOWTO.sgml	2005-03-16 17:41:31.000000000 +0100
@@ -1014,7 +1014,7 @@
 
 <p>NAT targets are like any other iptables target extensions, except
 they insist on being used only in the `nat' table.  Both the SNAT and
-DNAT targets take a `struct ip_nat_multi_range' as their extra data;
+DNAT targets take a `struct ip_nat_multi_range_compat' as their extra data;
 this is used to specify the range of addresses a mapping is allowed to
 bind into.  A range element, `struct ip_nat_range' consists of an
 inclusive minimum and maximum IP address, and an inclusive maximum and
